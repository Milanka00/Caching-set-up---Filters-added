
static_resources:
  listeners:
    - name: listener_0
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 9095
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                access_log:
                  - name: envoy.access_loggers.file
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                      path: /dev/stdout
                http_filters:
                  - name: envoy.filters.http.lua
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                      inline_code: |
                        function envoy_on_request(request_handle)
                          request_path = request_handle:headers():get(":path")
                          request_handle:logInfo("Received request for path: " .. tostring(request_path))
                        end

                        function envoy_on_response(response_handle)
                          local cache_control_header = response_handle:headers():get("Cache-Control")
                          response_handle:logInfo("cache control header from backend: " .. tostring(cache_control_header))
                        end

                  - name: envoy.filters.http.ext_authz
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                      transport_api_version: V3
                      http_service:
                        server_uri:
                          uri: http://auth:9002/authorize
                          cluster: ext_authz-http-service
                          timeout: 5s
                        path_prefix: /authorize?path=
                        authorization_response:
                          allowed_upstream_headers:
                            patterns:
                              - exact: x-current-user
                  - name: envoy.filters.http.ratelimit
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimit
                      domain: rl
                      request_type: external
                      # stage: 0
                      rate_limited_as_resource_exhausted: true
                      failure_mode_deny: false
                      enable_x_ratelimit_headers: DRAFT_VERSION_03
                      rate_limit_service:
                        grpc_service:
                          envoy_grpc:
                            cluster_name: ratelimit
                        transport_api_version: V3
                  - name: envoy.filters.http.router
                route_config:
                    name: local_route
                    virtual_hosts: 
                      - name: local_service
                        domains: ["*"]
                        routes:
                          # - match:
                          #     prefix: "/customurl/"
                          #     headers:
                          #       - name: "x-cluster-header"
                          #         exact_match: "varnish"
                          #   route:
                          #     cluster: varnish_backend_cluster
                          #     rate_limits:
                          #       - actions:
                          #           - request_headers:
                          #               header_name: "foo"
                          #               descriptor_key: "foo"
                          #     prefix_rewrite: "/publiccache/"

                          # - match:
                          #     prefix: "/customurl/"
                          #     headers:
                          #       - name: "x-cluster-header"
                          #         exact_match: "actual_backend"
                          #   route:
                          #     cluster: actual_backend_cluster
                          #     rate_limits:
                          #       - actions:
                          #           - request_headers:
                          #               header_name: "foo"
                          #               descriptor_key: "foo"
                          #     prefix_rewrite: "/publiccache/"
                          - match:
                              prefix: "/customurl/"
                            route:
                              cluster_header: "x-cluster-header"
                              rate_limits:
                                - actions:
                                    - request_headers:
                                        header_name: "foo"
                                        descriptor_key: "foo"
                              prefix_rewrite: "/publiccache/"


                          - match:
                              prefix: "/"
                              headers:
                                - name: "x-cluster-header"
                                  exact_match: "actual_backend2"
                            route:
                              cluster: actual_backend2_cluster


    - name: listener_1
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 9096
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                access_log:
                  - name: envoy.access_loggers.file
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                      path: /dev/stdout
                http_filters:
                  - name: envoy.filters.http.router
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains: ["*"]
                      routes:
                          - match:
                              prefix: "/customurl/"
                            route:
                              cluster_header: "x-cluster-header"
                              rate_limits:
                                - actions:
                                    - request_headers:
                                        header_name: "foo"
                                        descriptor_key: "foo"
                              prefix_rewrite: "/publiccache/"
                            
                          - match:
                              prefix: "/"
                              headers:
                                - name: "x-cluster-header"
                                  exact_match: "actual_backend2"
                            route:
                              cluster: actual_backend2_cluster

  clusters:
    - name: varnish_backend_cluster
      connect_timeout: 0.25s
      type: STRICT_DNS
      lb_policy: round_robin
      load_assignment:
        cluster_name: varnish_backend_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: varnish_new
                      port_value: 80
    - name: actual_backend_cluster
      connect_timeout: 0.25s
      type: STRICT_DNS
      lb_policy: round_robin
      load_assignment:
        cluster_name: actual_backend_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: backend_new
                      port_value: 8083
    - name: actual_backend2_cluster
      connect_timeout: 0.25s
      type: STRICT_DNS
      lb_policy: round_robin
      load_assignment:
        cluster_name: actual_backend2_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: backend2_new
                      port_value: 8082
    - name: ext_authz-http-service
      connect_timeout: 0.25s
      type: STRICT_DNS
      lb_policy: round_robin
      load_assignment:
        cluster_name: ext_authz-http-service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: auth
                      port_value: 9002

    - name: ratelimit
      type: STRICT_DNS
      connect_timeout: 1s
      lb_policy: ROUND_ROBIN
      protocol_selection: USE_CONFIGURED_PROTOCOL
      http2_protocol_options: {}
      load_assignment:
        cluster_name: ratelimit
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: ratelimit
                      port_value: 8081
